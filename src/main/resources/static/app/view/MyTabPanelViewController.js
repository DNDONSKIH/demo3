/*
 * File: app/view/MyTabPanelViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.5.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.6.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.6.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyTabPanelViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.mytabpanel',

    onAddDocumentButtonClick: function(button, e, eOpts) {
        const newForm = Ext.create('MyApp.view.AddDocumentWindow', {});
        newForm.show();

        // const newDocument = Ext.create('MyApp.model.Document', { header: '111', footer: '222', description: '333' } );
        // const documentsStore = Ext.data.StoreManager.lookup('DocumentsStore');
        // documentsStore.add(newDocument);
    },

    onDeleteDocumentButtonClick: function(button, e, eOpts) {
        this.getViewModel().get('documentGridSelection').drop();
    },

    onGridpanelSelectionChange: function(model, selected, eOpts) {
        if(selected.length){
            const documentId = selected[0].data.id;
            const sectionsStore = Ext.data.StoreManager.lookup('SectionsStore');
            const newUrl = `/api/documents/${documentId}/sections`;
            sectionsStore.getProxy().setUrl(newUrl);
            sectionsStore.reload();
            this.getViewModel().set('viewDocumentUrl', `/view/${documentId}`);
            //console.log(newUrl);
        }
    },

    onAddSectionButtonClick: function(button, e, eOpts) {
        const newSection = Ext.create('MyApp.model.Section', { title: 'Заголовок', text: 'Текст' });
        const sectionsStore = Ext.data.StoreManager.lookup('SectionsStore');
        sectionsStore.add(newSection);
    },

    onDeleteSectionButtonClick: function(button, e, eOpts) {
        this.getViewModel().get('sectionGridSelection').drop();
    },

    onViewTabActivate: function(component, eOpts) {
        const documentViewContainer = document.querySelector("#viewDocumentDiv"); //#div-id123
        documentViewContainer.innerHTML = '';
        const currentUrl = this.getViewModel().get('viewDocumentUrl');

        const viewtab1 = Ext.create('Ext.panel.Panel', {
            //title: 'Hello',
            width: 600,
            loader: {
                url: currentUrl,
                contentType: 'html',
                loadMask: true,
                loadOnRender: true
            },
            scrollable: true,
            bodyPadding: 10,
            renderTo: 'viewDocumentDiv'
        });
    }

});
